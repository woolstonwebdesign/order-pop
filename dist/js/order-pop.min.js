jQuery(document).ready(function(){var _=!1;function f(o){var e=localStorage.getItem("order_pop"),e=JSON.parse(e);return!(e.dismissedUntil&&moment.duration(moment().utc().diff(e.dismissedUntil)).asMinutes()<0)||(_&&console.log(moment.duration(moment().utc().diff(e.dismissedUntil)).asMinutes()),void setTimeout(function(){jQuery(".op-popper").remove(),t(o)},1e4))}function t(o){var e,t,r,s;f(o)&&(e=jQuery("<div />"),t=o.options.pop_font_colour,r=o.options.pop_background_colour,s=o.options.pop_interval_between_pops_after_dismissed_minutes,orderPop=localStorage.getItem("order_pop"),orderPopData=JSON.parse(orderPop),e.attr("class","op-popper"),r&&e.css("background-color",r),jQuery(`<div class="op-content-container">
							<button type="button" class="close" aria-label="Close" 
											style="background-color: transparent; padding: 0; color: ${t};">
									<span id="order-pop-dismiss-button" data-dismissinterval="${s}" aria-hidden="true">&times;</span>
							</button>
							<div class="op-content-wrapper"></div>
					</div>`).appendTo(e),e.appendTo("body"),function o(e,t){if(!f(e))return;var r=e.options.pop_font_colour,s=1e3*parseInt(e.options.pop_interval_between_pop_refresh_seconds),n=e.options.utm_code,a=v(e.products[t].order_date),p=e.products[t].order_first_name,i=e.products[t].order_last_name.charAt(0),d=e.products[t].order_city,l=e.products[t].order_state,c=e.products[t].name,u=e.products[t].url,m=e.products[t].image;_&&console.log("Refreshing...."+new Date,c);var g=`
				<div class="op-content" style="color: ${r}">
						<span class="orderdate meta" style="color: ${r}">${a}</span>
						<p class="customer-details pt-0" style="color: ${r}">${p} ${i} 
								from ${d}, ${l} bought ...</p>
						<p class="product-name" style="color: ${r}">
							<a href="${u}${n}">${c}</a>
						</p>
						<span class="meta" style="color: ${r}">
								<a href="${u}${n}" style="color: ${r}">Click here to view</a>
						</span>
				</div>
				<div class="op-image">${m}</div>
			`;jQuery(".op-content-wrapper").toggleClass("refreshing");setTimeout(function(){jQuery(".op-content-wrapper").html(g).toggleClass("refreshing")},500);t==e.products.length-1&&(t=0);setTimeout(function(){o(e,++t)},s)}(o,0),_&&console.log(o))}function v(o){o=moment.duration(moment().diff(o)).asHours();return 48<o?parseInt(o/24)+" days ago":o<1?parseInt(60*o)+" min ago":parseInt(o)+" hours ago"}jQuery.ajax({type:"post",dataType:"json",url:myAjax.ajaxurl,data:{action:"order_pop_get_order"}}).then(function(o){if(!o)throw Error;return function(o){var e=localStorage.getItem("order_pop"),t={},r=o.options.pop_interval_between_pops_after_dismissed_minutes;e&&(t=JSON.parse(e));t.dismissInterval=r,localStorage.setItem("order_pop",JSON.stringify(t)),(_=o.options.debug_active)&&console.log("set local storage",t);return o}(o)}).then(function(o){o&&t(o)}),window.addEventListener("click",function(o){var e,t;"order-pop-dismiss-button"==o.target.id&&(e=document.getElementById(o.target.id).getAttribute("data-dismissinterval"),t={},(t=(o=localStorage.getItem("order_pop"))?JSON.parse(o):t).dismissedUntil=moment().add(e,"minutes"),localStorage.setItem("order_pop",JSON.stringify(t)),_&&console.log("dismissed",JSON.parse(o)),document.querySelector(".op-popper").style.left="-999px")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
